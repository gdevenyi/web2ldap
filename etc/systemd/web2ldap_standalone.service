#-----------------------------------------------------------------------
# initiate:   systemctl enable web2ldap_uwsgi.service
# start:      systemctl start web2ldap_uwsgi.service
# get status: systemctl status web2ldap_uwsgi.service
#-----------------------------------------------------------------------

[Unit]
Description=web2ldap - web-based LDAPv3 client (built-in HTTP demon)
Requires=local-fs.target network.target
After=local-fs.target network.target

[Service]
Type=simple
Environment=LDAPNOINIT=1
Environment=PYTHONOPTIMIZE=2
Environment=PYTHONDONTWRITEBYTECODE=1
# listen on 0.0.0.0:1760
ExecStart=/opt/web2ldap/sbin/web2ldap.py 1760
User=web2ldap
Group=web2ldap
Restart=always
KillSignal=SIGQUIT

# explicitly allow the service to bind to 1760/tcp
SocketBindAllow=ipv4:tcp:1760
SocketBindAllow=ipv6:tcp:1760

# let systemd create temporary run-time directory and use it as current working directory
RuntimeDirectory=web2ldap
WorkingDirectory=/run/web2ldap
# run-time directory where Unix domain socket is created has to be writeable
ReadWritePaths=/run/web2ldap

# various hardening options
CapabilityBoundingSet=
AmbientCapabilities=
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
StandardInput=null
UMask=0077
PrivateUsers=no
PrivateTmp=yes
PrivateDevices=yes
ProtectSystem=strict
ProtectProc=invisible
ProtectHome=yes
ProtectKernelModules=yes
ProtectKernelTunables=yes
ProtectKernelLogs=yes
ProtectControlGroups=yes
ProtectHostname=yes
ProtectClock=yes
NoNewPrivileges=yes
MountFlags=private
SystemCallArchitectures=native
LockPersonality=yes
KeyringMode=private
RestrictRealtime=yes
RestrictNamespaces=yes
RestrictSUIDSGID=yes
DevicePolicy=closed
PrivateIPC=yes
RemoveIPC=yes
MemoryDenyWriteExecute=yes
ProcSubset=pid
SocketBindDeny=any
SystemCallFilter=~ @clock @cpu-emulation @debug @keyring @module @mount @raw-io @reboot @swap @obsolete splice @resources @pkey @timer fork
#AppArmorProfile=web2ldap

[Install]
WantedBy=multi-user.target
